Here is a working sample for such a simple (micro) emu.
It includes the basic needed Camd35 UDP functionality and is really very simple and compact.

Build: Just enter "make", there are no options necessary as long as you don't crosscompile (but as it's standard c code with no dependencies it should work quite easy on all plattforms)

Start: Start the built OSEmu binary. The necessary options will get displayed as usage info (a single user account and the port). It automatically listens on all IP addresses on the machine, including localhost.

Use in OSCam: Create a camd35 reader with caid/ident defined accordingly to what you emulate and maybe also services if you want. Use the user/password/port that you specified on start of OSEmu and it should start to get decoded.

Credits go to "Admin" for thisâ€¦

git clone git://github.com/oscam-emu/OSEmu

or in case of using svn

svn checkout https://github.com/oscam-emu/OSEmu/trunk OSEmu

You use the program with the following options:
 - -a user:password 
 - -p portnumber
 - -b (start in background/daemon mode)
An example would be:
 - /usr/bin/OSEmu -a server:passwd -p 12345 -b

And the corresponding oscam reader entry:

[reader]
label                         = OSEmu
protocol                      = camd35
device                        = 127.0.0.1,12345
user                          = server
password                      = passwd
caid                          = 0D00,0D02,0D03,0D05,090F
ecmwhitelist                  = 0D00:9C,84,87,8B,BF,C3,6D;0D02:84;0D03:9C,9F,A5;0D05:9C;090F:62,73,84,94,95,96,99,A6,B7
ident                         = 0D00:000000,000004,000010,000014,000020,0000C0,0000C4,0000CC;0D02:00008C,0000A0,0000A4,0000A8;0D03:000004,000008,000024,000028;0D05:000004,000010;090F:000000
group                         = 1
